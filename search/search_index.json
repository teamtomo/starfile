{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview starfile is a Python package for reading and writing STAR files in Python. reading and writing a STAR file with a single data block starfile can be used interactively to inspect/explore files or in scripts and larger software packages to provide basic STAR file I/O functions. Data is exposed as pandas dataframes . This package was designed principally for compatibility with files generated by RELION . For more information on working with pandas, please see the pandas docs . Quickstart For the following file particles.star with a single data block data_particles loop_ _rlnCoordinateX #1 _rlnCoordinateY #2 _rlnCoordinateZ #3 _rlnAngleRot #4 _rlnAngleTilt #5 _rlnAnglePsi #6 _rlnMicrographName #7 91.798700 83.622600 203.341030 -51.740000 173.930000 32.971000 01_10.00Apx.mrc 97.635800 80.437000 203.136160 141.500000 171.760000 -134.680000 01_10.00Apx.mrc 92.415200 88.842700 210.663900 -78.750000 173.930000 87.263200 01_10.00Apx.mrc 94.607830 93.135410 205.425960 -85.215000 167.170000 85.632200 01_10.00Apx.mrc 86.187800 80.125400 204.558750 14.910000 163.260000 -16.030000 01_10.00Apx.mrc 91.824240 76.738300 203.794280 39.740000 168.410000 -57.250000 01_10.00Apx.mrc 98.253300 73.530100 203.856030 73.950000 166.380000 -84.640000 01_10.00Apx.mrc 101.303500 80.290800 194.790400 -178.878000 166.090000 73.181000 01_10.00Apx.mrc Read the file import starfile df = starfile . read ( 'particles.star' ) Interact with the data df [ 'rlnCoordinateX' ] += 10 df . head () rlnCoordinateX rlnCoordinateY rlnCoordinateZ rlnAngleRot rlnAngleTilt rlnAnglePsi rlnMicrographName 0 101.79870 83.62260 203.34103 -51.740 173.93 32.9710 01_10.00Apx.mrc 1 107.63580 80.43700 203.13616 141.500 171.76 -134.6800 01_10.00Apx.mrc 2 102.41520 88.84270 210.66390 -78.750 173.93 87.2632 01_10.00Apx.mrc 3 104.60783 93.13541 205.42596 -85.215 167.17 85.6322 01_10.00Apx.mrc 4 96.18780 80.12540 204.55875 14.910 163.26 -16.0300 01_10.00Apx.mrc Save the (modified) data to file starfile . write ( df , 'modified_particles.star' ) For more advanced usage, including dealing with files containing multiple data blocks, please see the data model and multiple data block pages. Installation pip install starfile","title":"Overview"},{"location":"#overview","text":"starfile is a Python package for reading and writing STAR files in Python. reading and writing a STAR file with a single data block starfile can be used interactively to inspect/explore files or in scripts and larger software packages to provide basic STAR file I/O functions. Data is exposed as pandas dataframes . This package was designed principally for compatibility with files generated by RELION . For more information on working with pandas, please see the pandas docs .","title":"Overview"},{"location":"#quickstart","text":"For the following file particles.star with a single data block data_particles loop_ _rlnCoordinateX #1 _rlnCoordinateY #2 _rlnCoordinateZ #3 _rlnAngleRot #4 _rlnAngleTilt #5 _rlnAnglePsi #6 _rlnMicrographName #7 91.798700 83.622600 203.341030 -51.740000 173.930000 32.971000 01_10.00Apx.mrc 97.635800 80.437000 203.136160 141.500000 171.760000 -134.680000 01_10.00Apx.mrc 92.415200 88.842700 210.663900 -78.750000 173.930000 87.263200 01_10.00Apx.mrc 94.607830 93.135410 205.425960 -85.215000 167.170000 85.632200 01_10.00Apx.mrc 86.187800 80.125400 204.558750 14.910000 163.260000 -16.030000 01_10.00Apx.mrc 91.824240 76.738300 203.794280 39.740000 168.410000 -57.250000 01_10.00Apx.mrc 98.253300 73.530100 203.856030 73.950000 166.380000 -84.640000 01_10.00Apx.mrc 101.303500 80.290800 194.790400 -178.878000 166.090000 73.181000 01_10.00Apx.mrc Read the file import starfile df = starfile . read ( 'particles.star' ) Interact with the data df [ 'rlnCoordinateX' ] += 10 df . head () rlnCoordinateX rlnCoordinateY rlnCoordinateZ rlnAngleRot rlnAngleTilt rlnAnglePsi rlnMicrographName 0 101.79870 83.62260 203.34103 -51.740 173.93 32.9710 01_10.00Apx.mrc 1 107.63580 80.43700 203.13616 141.500 171.76 -134.6800 01_10.00Apx.mrc 2 102.41520 88.84270 210.66390 -78.750 173.93 87.2632 01_10.00Apx.mrc 3 104.60783 93.13541 205.42596 -85.215 167.17 85.6322 01_10.00Apx.mrc 4 96.18780 80.12540 204.55875 14.910 163.26 -16.0300 01_10.00Apx.mrc Save the (modified) data to file starfile . write ( df , 'modified_particles.star' ) For more advanced usage, including dealing with files containing multiple data blocks, please see the data model and multiple data block pages.","title":"Quickstart"},{"location":"#installation","text":"pip install starfile","title":"Installation"},{"location":"examples/merging/","text":"merging data across tables In this example, we will use pandas to merge data from two blocks in a RELION particle STAR file particles.star . In RELION ( >=3.1 ) particle STAR files contain an optics table and a particles table. Data about optics common to many particles is stored in the optics table. particles.star data_optics loop_ _rlnOpticsGroup #1 _rlnOpticsGroupName #2 _rlnSphericalAberration #3 _rlnVoltage #4 _rlnImagePixelSize #5 _rlnImageSize #6 _rlnImageDimensionality #7 1 opticsGroup1 2.700000 300.000000 3.300000 160 3 data_particles loop_ _rlnCoordinateX #1 _rlnCoordinateY #2 _rlnCoordinateZ #3 _rlnAngleRot #4 _rlnAngleTilt #5 _rlnAnglePsi #6 _rlnImageName #7 _rlnCtfImage #8 _rlnRandomSubset #9 _rlnPixelSize #10 _rlnMicrographName #11 _rlnOpticsGroup #12 _rlnGroupNumber #13 _rlnOriginXAngst #14 _rlnOriginYAngst #15 _rlnOriginZAngst #16 _rlnClassNumber #17 _rlnNormCorrection #18 _rlnLogLikeliContribution #19 _rlnMaxValueProbDistribution #20 _rlnNrOfSignificantSamples #21 880.274000 895.057900 1107.245000 131.246000 106.820800 45.228430 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000000_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000000_ctf_3.30A.mrc 2 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 6 1.000000 4150981.000000 1.000000 1 973.165500 958.641800 1115.101000 87.247110 109.236500 45.323810 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000001_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000001_ctf_3.30A.mrc 1 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 4 1.000000 4150837.000000 1.000000 1 955.949400 960.465100 629.459100 9.331370 99.309980 11.024810 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000002_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000002_ctf_3.30A.mrc 1 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 3 1.000000 4150650.000000 1.000000 1 1175.177000 1135.731000 882.605200 -147.261200 81.605380 77.325710 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000003_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000003_ctf_3.30A.mrc 2 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 1 1.000000 4151420.000000 1.000000 1 1190.658000 1122.102000 1073.642000 40.404590 98.061770 42.563060 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000004_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000004_ctf_3.30A.mrc 1 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 6 1.000000 4150168.000000 1.000000 1 The column rlnOpticsGroup is present in both tables. Merging data from multiple dataframes is an example of a join in relational algebra . In pandas, this is implemented as DataFrame.merge() . import starfile star = starfile . read ( 'particles.star' ) df = star [ 'particles' ] . merge ( star [ 'optics' ], on = 'rlnOpticsGroup' ) The resulting dataframe contains columns with data from both the particles and optics dataframes. df . head () rlnCoordinateX rlnCoordinateY rlnCoordinateZ rlnAngleRot rlnAngleTilt ... rlnSphericalAberration rlnVoltage rlnImagePixelSize rlnImageSize rlnImageDimensionality 0 880.2740 895.0579 1107.2450 131.24600 106.82080 ... 2.7 300.0 3.3 160 3 1 973.1655 958.6418 1115.1010 87.24711 109.23650 ... 2.7 300.0 3.3 160 3 2 955.9494 960.4651 629.4591 9.33137 99.30998 ... 2.7 300.0 3.3 160 3 3 1175.1770 1135.7310 882.6052 -147.26120 81.60538 ... 2.7 300.0 3.3 160 3 4 1190.6580 1122.1020 1073.6420 40.40459 98.06177 ... 2.7 300.0 3.3 160 3 [5 rows x 27 columns] This table has the following properties - every column is a variable - every row is an observation - every cell contains a single value Data in this form is sometimes referred to as tidy data . Tidy data is easier to manipulate.","title":"merging data across tables"},{"location":"examples/merging/#merging-data-across-tables","text":"In this example, we will use pandas to merge data from two blocks in a RELION particle STAR file particles.star . In RELION ( >=3.1 ) particle STAR files contain an optics table and a particles table. Data about optics common to many particles is stored in the optics table. particles.star data_optics loop_ _rlnOpticsGroup #1 _rlnOpticsGroupName #2 _rlnSphericalAberration #3 _rlnVoltage #4 _rlnImagePixelSize #5 _rlnImageSize #6 _rlnImageDimensionality #7 1 opticsGroup1 2.700000 300.000000 3.300000 160 3 data_particles loop_ _rlnCoordinateX #1 _rlnCoordinateY #2 _rlnCoordinateZ #3 _rlnAngleRot #4 _rlnAngleTilt #5 _rlnAnglePsi #6 _rlnImageName #7 _rlnCtfImage #8 _rlnRandomSubset #9 _rlnPixelSize #10 _rlnMicrographName #11 _rlnOpticsGroup #12 _rlnGroupNumber #13 _rlnOriginXAngst #14 _rlnOriginYAngst #15 _rlnOriginZAngst #16 _rlnClassNumber #17 _rlnNormCorrection #18 _rlnLogLikeliContribution #19 _rlnMaxValueProbDistribution #20 _rlnNrOfSignificantSamples #21 880.274000 895.057900 1107.245000 131.246000 106.820800 45.228430 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000000_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000000_ctf_3.30A.mrc 2 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 6 1.000000 4150981.000000 1.000000 1 973.165500 958.641800 1115.101000 87.247110 109.236500 45.323810 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000001_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000001_ctf_3.30A.mrc 1 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 4 1.000000 4150837.000000 1.000000 1 955.949400 960.465100 629.459100 9.331370 99.309980 11.024810 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000002_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000002_ctf_3.30A.mrc 1 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 3 1.000000 4150650.000000 1.000000 1 1175.177000 1135.731000 882.605200 -147.261200 81.605380 77.325710 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000003_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000003_ctf_3.30A.mrc 2 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 1 1.000000 4151420.000000 1.000000 1 1190.658000 1122.102000 1073.642000 40.404590 98.061770 42.563060 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000004_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000004_ctf_3.30A.mrc 1 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 6 1.000000 4150168.000000 1.000000 1 The column rlnOpticsGroup is present in both tables. Merging data from multiple dataframes is an example of a join in relational algebra . In pandas, this is implemented as DataFrame.merge() . import starfile star = starfile . read ( 'particles.star' ) df = star [ 'particles' ] . merge ( star [ 'optics' ], on = 'rlnOpticsGroup' ) The resulting dataframe contains columns with data from both the particles and optics dataframes. df . head () rlnCoordinateX rlnCoordinateY rlnCoordinateZ rlnAngleRot rlnAngleTilt ... rlnSphericalAberration rlnVoltage rlnImagePixelSize rlnImageSize rlnImageDimensionality 0 880.2740 895.0579 1107.2450 131.24600 106.82080 ... 2.7 300.0 3.3 160 3 1 973.1655 958.6418 1115.1010 87.24711 109.23650 ... 2.7 300.0 3.3 160 3 2 955.9494 960.4651 629.4591 9.33137 99.30998 ... 2.7 300.0 3.3 160 3 3 1175.1770 1135.7310 882.6052 -147.26120 81.60538 ... 2.7 300.0 3.3 160 3 4 1190.6580 1122.1020 1073.6420 40.40459 98.06177 ... 2.7 300.0 3.3 160 3 [5 rows x 27 columns] This table has the following properties - every column is a variable - every row is an observation - every cell contains a single value Data in this form is sometimes referred to as tidy data . Tidy data is easier to manipulate.","title":"merging data across tables"},{"location":"examples/multi_block/","text":"multiple data block example In this example, we will use starfile to read and write files containing multiple data blocks. particles.star data_optics loop_ _rlnOpticsGroup #1 _rlnOpticsGroupName #2 _rlnSphericalAberration #3 _rlnVoltage #4 _rlnImagePixelSize #5 _rlnImageSize #6 _rlnImageDimensionality #7 1 opticsGroup1 2.700000 300.000000 3.300000 160 3 data_particles loop_ _rlnCoordinateX #1 _rlnCoordinateY #2 _rlnCoordinateZ #3 _rlnAngleRot #4 _rlnAngleTilt #5 _rlnAnglePsi #6 _rlnImageName #7 _rlnCtfImage #8 _rlnRandomSubset #9 _rlnPixelSize #10 _rlnMicrographName #11 _rlnOpticsGroup #12 _rlnGroupNumber #13 _rlnOriginXAngst #14 _rlnOriginYAngst #15 _rlnOriginZAngst #16 _rlnClassNumber #17 _rlnNormCorrection #18 _rlnLogLikeliContribution #19 _rlnMaxValueProbDistribution #20 _rlnNrOfSignificantSamples #21 880.274000 895.057900 1107.245000 131.246000 106.820800 45.228430 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000000_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000000_ctf_3.30A.mrc 2 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 6 1.000000 4150981.000000 1.000000 1 973.165500 958.641800 1115.101000 87.247110 109.236500 45.323810 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000001_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000001_ctf_3.30A.mrc 1 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 4 1.000000 4150837.000000 1.000000 1 955.949400 960.465100 629.459100 9.331370 99.309980 11.024810 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000002_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000002_ctf_3.30A.mrc 1 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 3 1.000000 4150650.000000 1.000000 1 1175.177000 1135.731000 882.605200 -147.261200 81.605380 77.325710 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000003_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000003_ctf_3.30A.mrc 2 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 1 1.000000 4151420.000000 1.000000 1 1190.658000 1122.102000 1073.642000 40.404590 98.061770 42.563060 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000004_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000004_ctf_3.30A.mrc 1 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 6 1.000000 4150168.000000 1.000000 1 Reading Reading a file with multiple data blocks is similar to reading a file with a single data block. In this case, a dictionary of dataframes is returned. The keys of this dictionary are the names of data blocks. import starfile star = starfile . read ( 'particles.star' ) optics_df = star [ 'optics' ] particle_df = star [ 'particles' ] Tip starfile.read can be forced to always return a dictionary of dataframes. starfile . read ( 'particles.star' , force_dict = True ) Writing Writing a file containing multiple data blocks is similar, simply pass a dictionary of dataframes. import starfile starfile . write ( { 'optics' : optics_df , 'particles' : particle_df }, 'new_file.star' )","title":"multiple data blocks"},{"location":"examples/multi_block/#multiple-data-block-example","text":"In this example, we will use starfile to read and write files containing multiple data blocks. particles.star data_optics loop_ _rlnOpticsGroup #1 _rlnOpticsGroupName #2 _rlnSphericalAberration #3 _rlnVoltage #4 _rlnImagePixelSize #5 _rlnImageSize #6 _rlnImageDimensionality #7 1 opticsGroup1 2.700000 300.000000 3.300000 160 3 data_particles loop_ _rlnCoordinateX #1 _rlnCoordinateY #2 _rlnCoordinateZ #3 _rlnAngleRot #4 _rlnAngleTilt #5 _rlnAnglePsi #6 _rlnImageName #7 _rlnCtfImage #8 _rlnRandomSubset #9 _rlnPixelSize #10 _rlnMicrographName #11 _rlnOpticsGroup #12 _rlnGroupNumber #13 _rlnOriginXAngst #14 _rlnOriginYAngst #15 _rlnOriginZAngst #16 _rlnClassNumber #17 _rlnNormCorrection #18 _rlnLogLikeliContribution #19 _rlnMaxValueProbDistribution #20 _rlnNrOfSignificantSamples #21 880.274000 895.057900 1107.245000 131.246000 106.820800 45.228430 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000000_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000000_ctf_3.30A.mrc 2 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 6 1.000000 4150981.000000 1.000000 1 973.165500 958.641800 1115.101000 87.247110 109.236500 45.323810 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000001_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000001_ctf_3.30A.mrc 1 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 4 1.000000 4150837.000000 1.000000 1 955.949400 960.465100 629.459100 9.331370 99.309980 11.024810 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000002_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000002_ctf_3.30A.mrc 1 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 3 1.000000 4150650.000000 1.000000 1 1175.177000 1135.731000 882.605200 -147.261200 81.605380 77.325710 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000003_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000003_ctf_3.30A.mrc 2 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 1 1.000000 4151420.000000 1.000000 1 1190.658000 1122.102000 1073.642000 40.404590 98.061770 42.563060 subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000004_3.30A.mrc subtomo_05Feb21/TS.mrc/TS.mrc_22redo_combined_0000004_ctf_3.30A.mrc 1 3.300000 TS.mrc.tomostar 1 1 0.000000 0.000000 0.000000 6 1.000000 4150168.000000 1.000000 1","title":"multiple data block example"},{"location":"examples/multi_block/#reading","text":"Reading a file with multiple data blocks is similar to reading a file with a single data block. In this case, a dictionary of dataframes is returned. The keys of this dictionary are the names of data blocks. import starfile star = starfile . read ( 'particles.star' ) optics_df = star [ 'optics' ] particle_df = star [ 'particles' ] Tip starfile.read can be forced to always return a dictionary of dataframes. starfile . read ( 'particles.star' , force_dict = True )","title":"Reading"},{"location":"examples/multi_block/#writing","text":"Writing a file containing multiple data blocks is similar, simply pass a dictionary of dataframes. import starfile starfile . write ( { 'optics' : optics_df , 'particles' : particle_df }, 'new_file.star' )","title":"Writing"},{"location":"examples/single_block/","text":"single data block example In this example, we will use starfile to read and write a STAR file with a single data block. particles.star data_particles loop_ _rlnCoordinateX #1 _rlnCoordinateY #2 _rlnCoordinateZ #3 _rlnAngleRot #4 _rlnAngleTilt #5 _rlnAnglePsi #6 _rlnMicrographName #7 91.798700 83.622600 203.341030 -51.740000 173.930000 32.971000 01_10.00Apx.mrc 97.635800 80.437000 203.136160 141.500000 171.760000 -134.680000 01_10.00Apx.mrc 92.415200 88.842700 210.663900 -78.750000 173.930000 87.263200 01_10.00Apx.mrc 94.607830 93.135410 205.425960 -85.215000 167.170000 85.632200 01_10.00Apx.mrc 86.187800 80.125400 204.558750 14.910000 163.260000 -16.030000 01_10.00Apx.mrc 91.824240 76.738300 203.794280 39.740000 168.410000 -57.250000 01_10.00Apx.mrc 98.253300 73.530100 203.856030 73.950000 166.380000 -84.640000 01_10.00Apx.mrc 101.303500 80.290800 194.790400 -178.878000 166.090000 73.181000 01_10.00Apx.mrc Read the file import starfile df = starfile . read ( 'particles.star' ) Interact with the data df [ 'rlnCoordinateX' ] += 10 df . head () rlnCoordinateX rlnCoordinateY rlnCoordinateZ rlnAngleRot rlnAngleTilt rlnAnglePsi rlnMicrographName 0 101.79870 83.62260 203.34103 -51.740 173.93 32.9710 01_10.00Apx.mrc 1 107.63580 80.43700 203.13616 141.500 171.76 -134.6800 01_10.00Apx.mrc 2 102.41520 88.84270 210.66390 -78.750 173.93 87.2632 01_10.00Apx.mrc 3 104.60783 93.13541 205.42596 -85.215 167.17 85.6322 01_10.00Apx.mrc 4 96.18780 80.12540 204.55875 14.910 163.26 -16.0300 01_10.00Apx.mrc Save the (modified) data to file starfile . write ( df , 'modified_particles.star' ) For files containing multiple data blocks, please see the multiple data block example.","title":"single data block"},{"location":"examples/single_block/#single-data-block-example","text":"In this example, we will use starfile to read and write a STAR file with a single data block. particles.star data_particles loop_ _rlnCoordinateX #1 _rlnCoordinateY #2 _rlnCoordinateZ #3 _rlnAngleRot #4 _rlnAngleTilt #5 _rlnAnglePsi #6 _rlnMicrographName #7 91.798700 83.622600 203.341030 -51.740000 173.930000 32.971000 01_10.00Apx.mrc 97.635800 80.437000 203.136160 141.500000 171.760000 -134.680000 01_10.00Apx.mrc 92.415200 88.842700 210.663900 -78.750000 173.930000 87.263200 01_10.00Apx.mrc 94.607830 93.135410 205.425960 -85.215000 167.170000 85.632200 01_10.00Apx.mrc 86.187800 80.125400 204.558750 14.910000 163.260000 -16.030000 01_10.00Apx.mrc 91.824240 76.738300 203.794280 39.740000 168.410000 -57.250000 01_10.00Apx.mrc 98.253300 73.530100 203.856030 73.950000 166.380000 -84.640000 01_10.00Apx.mrc 101.303500 80.290800 194.790400 -178.878000 166.090000 73.181000 01_10.00Apx.mrc Read the file import starfile df = starfile . read ( 'particles.star' ) Interact with the data df [ 'rlnCoordinateX' ] += 10 df . head () rlnCoordinateX rlnCoordinateY rlnCoordinateZ rlnAngleRot rlnAngleTilt rlnAnglePsi rlnMicrographName 0 101.79870 83.62260 203.34103 -51.740 173.93 32.9710 01_10.00Apx.mrc 1 107.63580 80.43700 203.13616 141.500 171.76 -134.6800 01_10.00Apx.mrc 2 102.41520 88.84270 210.66390 -78.750 173.93 87.2632 01_10.00Apx.mrc 3 104.60783 93.13541 205.42596 -85.215 167.17 85.6322 01_10.00Apx.mrc 4 96.18780 80.12540 204.55875 14.910 163.26 -16.0300 01_10.00Apx.mrc Save the (modified) data to file starfile . write ( df , 'modified_particles.star' ) For files containing multiple data blocks, please see the multiple data block example.","title":"single data block example"}]}